services:
  otus-symfony:
    container_name: ${SYMFONY_CONTAINER_NAME}
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      XDEBUG_MODE: "debug"
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
    volumes:
      - ./:/app
    working_dir: /app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      otus-postgresql:
        condition: service_healthy
      otus-rabbitmq:
        condition: service_healthy
      otus-redis:
        condition: service_started
      otus-memcached:
        condition: service_started

  otus-nginx:
    image: nginx:${NGINX_VERSION}-alpine
    container_name: otus-nginx
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "7777:80"
    depends_on:
      - otus-symfony

  otus-postgresql:
    image: postgres:15.1-alpine
    ports:
      - '15432:5432'
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  otus-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    container_name: ${ELASTICSEARCH_CONTAINER_NAME}
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"

  otus-kibana:
    image: docker.elastic.co/kibana/kibana:7.17.16
    container_name: ${KIBANA_CONTAINER_NAME}
    platform: linux/arm64
    environment:
      - ELASTICSEARCH_HOSTS=http://otus-elasticsearch:9200
    depends_on:
      - otus-elasticsearch
    ports:
      - "5601:5601"

  otus-graphite:
    image: graphiteapp/graphite-statsd
    container_name: ${GRAPHITE_CONTAINER_NAME}
    restart: always
    ports:
      - "8000:80"    # Веб-интерфейс
      - "2003:2003"  # Основной порт для приема метрик
      - "8125:8125/udp"  # StatsD порт

  otus-grafana:
    image: grafana/grafana
    container_name: ${GRAFANA_CONTAINER_NAME}
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      otus-graphite:
        condition: service_started

  otus-memcached:
    image: memcached:latest
    container_name: ${MEMCACHED_CONTAINER_NAME}
    restart: always
    ports:
      - "11211:11211"

  otus-redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  otus-rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: ${RABBITMQ_CONTAINER_NAME}
    hostname: rabbit-mq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5

  otus-supervisor:
    build:
      context: ./docker/supervisor
      dockerfile: Dockerfile
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
    container_name: ${SUPERVISOR_CONTAINER_NAME}
    volumes:
      - ./:/app
    depends_on:
      otus-symfony:
        condition: service_started
      otus-postgresql:
        condition: service_healthy
      otus-rabbitmq:
        condition: service_healthy
      otus-redis:
        condition: service_started
      otus-memcached:
        condition: service_started
    environment:
      RABBITMQ_URL: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_CONTAINER_NAME}:5672

volumes:
  postgres-data:
    driver: local
