openapi: 3.0.0
info:
  title: Student Management API
  version: 1.0.0
  description: API for managing students, teachers, groups, and skills

servers:
  - url: /api
    description: API V1

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string

    AuthRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    CreateStudentRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    CreateTeacherRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
        - max_groups
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        max_groups:
          type: integer
          default: 2

    CreateGroupRequest:
      type: object
      required:
        - name
        - teacher_id
      properties:
        name:
          type: string
        teacher_id:
          type: integer
        min_students:
          type: integer
          default: 1
        max_size:
          type: integer
          default: 20
        required_skills:
          type: array
          items:
            type: object
            required:
              - skill_id
              - level
            properties:
              skill_id:
                type: integer
              level:
                type: integer
                minimum: 1
                maximum: 5

    GroupFilterRequest:
      type: object
      properties:
        page:
          type: integer
          default: 1
        per_page:
          type: integer
          default: 20

security:
  - JWT: []

paths:
  /v1/auth/token:
    post:
      tags: [Auth]
      security: []
      summary: Get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/students/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [Students]
      summary: Get student by ID
      responses:
        '200':
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags: [Students]
      summary: Update student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Students]
      summary: Delete student
      responses:
        '204':
          description: Student deleted
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/students/{id}/password:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: [Students]
      summary: Update student password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
              properties:
                current_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password updated
        '400':
          description: Current password is incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/students:
    post:
      tags: [Students]
      summary: Create new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
      responses:
        '201':
          description: Student created
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags: [Students]
      summary: List students
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of students

  /v1/students/{id}/skills/{skill_id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: skill_id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags: [Students]
      summary: Remove skill from student
      responses:
        '200':
          description: Skill removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student or skill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/students/{id}/skills:
    post:
      tags: [Students]
      summary: Add skill to student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - skill_id
                - level
              properties:
                skill_id:
                  type: integer
                level:
                  type: integer
                  minimum: 1
                  maximum: 5
      responses:
        '200':
          description: Skill added
        '404':
          description: Student or skill not found

  /v1/students/{id}/groups/{group_id}:
    post:
      tags: [Students]
      summary: Join group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Joined group
        '404':
          description: Student or group not found

    delete:
      tags: [Students]
      summary: Leave group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Left group
        '404':
          description: Student or group not found

  /v1/teachers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [Teachers]
      summary: Get teacher by ID
      responses:
        '200':
          description: Teacher details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags: [Teachers]
      summary: Update teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                max_groups:
                  type: integer
      responses:
        '200':
          description: Teacher updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Teachers]
      summary: Delete teacher
      responses:
        '204':
          description: Teacher deleted
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/teachers/{id}/skills/{skill_id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: skill_id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags: [Teachers]
      summary: Remove skill from teacher
      responses:
        '200':
          description: Skill removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Teacher or skill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/teachers/{id}/password:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags: [Teachers]
      summary: Update teacher password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
              properties:
                current_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password updated
        '400':
          description: Current password is incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/teachers:
    post:
      tags: [Teachers]
      summary: Create new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeacherRequest'
      responses:
        '201':
          description: Teacher created
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags: [Teachers]
      summary: List teachers
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of teachers

  /v1/teachers/{id}/groups:
    get:
      tags: [Teachers]
      summary: List teacher's groups
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of teacher's groups
        '404':
          description: Teacher not found

  /v1/groups/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [Groups]
      summary: Get group by ID
      responses:
        '200':
          description: Group details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags: [Groups]
      summary: Update group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                teacher_id:
                  type: integer
                min_students:
                  type: integer
                max_students:
                  type: integer
      responses:
        '200':
          description: Group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Group or teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Groups]
      summary: Delete group
      responses:
        '204':
          description: Group deleted
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/groups:
    post:
      tags: [Groups]
      summary: Create new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: Group created
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags: [Groups]
      summary: List groups
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of groups

  /v1/groups/{id}/students:
    post:
      tags: [Groups]
      summary: Add student to group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - student_id
              properties:
                student_id:
                  type: integer
      responses:
        '200':
          description: Student added to group
        '404':
          description: Group or student not found

  /v1/groups/{id}/skills/{skill_id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: skill_id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags: [Groups]
      summary: Remove required skill from group
      responses:
        '200':
          description: Skill removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Group or skill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/groups/{id}/skills:
    post:
      tags: [Groups]
      summary: Add required skill to group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - skill_id
                - level
              properties:
                skill_id:
                  type: integer
                level:
                  type: integer
                  minimum: 1
                  maximum: 5
      responses:
        '200':
          description: Skill added to group
        '404':
          description: Group or skill not found

  /v1/groups/{id}/teacher:
    post:
      tags: [Groups]
      summary: Assign teacher to group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - teacher_id
              properties:
                teacher_id:
                  type: integer
      responses:
        '200':
          description: Teacher assigned to group
        '404':
          description: Group or teacher not found

tags:
  - name: Auth
    description: Authentication endpoints
  - name: Students
    description: Operations about students
  - name: Teachers
    description: Operations about teachers
  - name: Groups
    description: Operations about groups
